{"version":3,"sources":["assets/images/blogging.png","redux/actions/index.js","redux/actions/actionCreator.js","components/Navbars/HorizontalNavbar.js","components/Footer/FooterComponent.js","components/Layout/Layout.js","components/Jumbotron/Jumbotron.js","api/api.js","assets/images/default-post-image.jpg","components/PostsGrid/PostsGrid.js","pages/Home/Home.js","pages/Login/LoginForm.js","pages/Login/Login.js","pages/Signup/SignupForm.js","pages/Signup/Signup.js","pages/Posts/NewPost.js","pages/Posts/UserPosts.js","pages/Posts/EditPost.js","assets/images/default-user.png","pages/Users/UserProfile.js","pages/Comments/CommentForm.js","pages/Comments/CommentsDesktop.js","pages/Comments/CommentsMobile.js","pages/Comments/Comments.js","pages/Posts/Post.js","LoggedInRoute.js","NotLoggedInRoute.js","pages/NotFound/NotFound.js","App.js","redux/reducers/userAuthReducer.js","redux/store/sessionStorage.js","redux/reducers/rootReducer.js","redux/sagas/userAuthSaga.js","redux/sagas/rootSaga.js","redux/store/store.js","index.js"],"names":["userAuth","userAuthActions","payload","type","err","SubMenu","Menu","HorizontalNavbar","userState","useSelector","st","user","dispatch","useDispatch","selectedKeys","mode","theme","Item","className","href","src","blogLogo","shape","isLoggedIn","icon","imagePath","title","userName","SettingOutlined","GroupOutlined","LoginOutlined","onClick","FormOutlined","UserAddOutlined","FooterComponent","Header","AntdLayout","Footer","Sider","Content","Layout","children","Jumbotron","axiosConfig","baseURL","window","location","hostname","axios","Axios","create","authAPI","data","post","usersAPI","id","get","put","postsAPI","delete","commentsAPI","Meta","Card","PostsGrid","reloadPosts","router","useHistory","useState","deleteModal","setDeleteModal","deletePostID","setDeletePostID","reload","setReload","confirmDelete","a","message","success","console","log","response","error","map","item","xs","sm","md","lg","hoverable","cover","push","postID","_id","alt","defaultPostImage","actions","createdBy","EditTwoTone","DeleteTwoTone","twoToneColor","description","content","substring","visible","onOk","onCancel","centered","Home","postsData","setPostsData","innerWidth","width","setWidth","errorMsg","setErrorMsg","useEffect","handleResize","addEventListener","removeEventListener","res","RightCircleOutlined","size","autoplay","loop","orientation","Boolean","length","param","LoginForm","initialValues","submissionErrors","setSubmissionErrors","onSubmit","event","validate","values","errors","email","trim","password","render","handleSubmit","submitting","label","labelCol","span","wrapperCol","name","input","meta","touched","color","Password","isEmpty","Object","entries","key","value","disabled","htmlType","Login","SignupForm","confirmPassword","Signup","NewPost","rows","goBack","UserPosts","useLocation","setUserName","userID","setUserID","getPostsData","state","hasOwnProperty","keys","reloadTrigger","EditPost","setInitialValues","setPostID","UserProfile","editing","setEditing","editingPassword","setEditingPassword","defaultUser","oldPassword","form","readOnly","summary","EditFilled","LockFilled","SaveFilled","CaretLeftOutlined","reset","CommentForm","postId","setReloadingFlag","reloading","setReloading","comment","placeholder","showIcon","closable","CommentsDesktop","index","selectedEditCommentID","setDeleteSelectedCommentID","setEditSelectedCommentID","moment","createdAt","fromNow","CommentsMobile","Comments","setDeleteReloadingFlag","setEditReloadingFlag","selectedDeleteCommentID","deleteReloading","setDeleteReloading","editReloading","setEditReloading","Post","postData","setPostData","reloadDelete","setReloadDelete","reloadEdit","setReloadEdit","reloadPost","setReloadPost","userImageUrl","createdByName","format","DeleteFilled","danger","comments","LoggedInRoute","Component","component","rest","props","to","pathname","from","NotLoggedInRoute","NotFound","style","height","App","initialState","exact","path","loadState","serializedState","sessionStorage","getItem","token","JSON","parse","saveState","clear","stringify","setItem","emptyState","decodedToken","jwt","decode","rootReducer","combineReducers","action","newState","updatedState","createLogin","createLoginStart","takeEvery","rootSaga","all","call","sagaMiddleware","createSagaMiddleware","onError","errInfo","onSagaError","middleWares","createLogger","store","createStore","applyMiddleware","run","storeConfig","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a1ca1c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blogging.ffbd0b74.png\";","export const userAuth = {\n  LOGIN: \"LOGIN\",\n  UPDATE_USER: \"UPDATE_USER\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILED: \"LOGIN_FAILED\",\n  LOGOUT: \"LOGOUT\",\n};\n","import { userAuth } from \"./index\";\n\nexport const userAuthActions = {\n  login: (payload) => ({\n    type: userAuth.LOGIN,\n    payload: payload,\n  }),\n  loginSuccess: (payload) => ({\n    type: userAuth.LOGIN_SUCCESS,\n    payload: payload,\n  }),\n  updateUser: (payload) => ({\n    type: userAuth.UPDATE_USER,\n    payload: payload,\n  }),\n  loginFailed: (err) => ({\n    type: userAuth.LOGIN_FAILED,\n    payload: err,\n  }),\n  logout: () => ({\n    type: userAuth.LOGOUT,\n  }),\n};\n","import React from \"react\";\nimport {\n  LoginOutlined,\n  UserAddOutlined,\n  SettingOutlined,\n  GroupOutlined,\n  FormOutlined,\n} from \"@ant-design/icons\";\nimport { Menu, Avatar } from \"antd\";\nimport blogLogo from \"./../../assets/images/blogging.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\nconst { SubMenu } = Menu;\n\nexport default function HorizontalNavbar() {\n  const userState = useSelector((st) => st.user);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Menu selectedKeys={\"logo\"} mode=\"horizontal\" theme=\"dark\">\n        <Menu.Item className=\"unhoverable-menu-item\">\n          <a href=\"/\">\n            <Avatar src={blogLogo} shape=\"square\" /> &nbsp; Blog App\n          </a>\n        </Menu.Item>\n\n        {userState.isLoggedIn ? (\n          <>\n            <SubMenu\n              key=\"SubMenu\"\n              icon={<Avatar src={userState.user.imagePath} shape=\"circle\" />}\n              title={\" \" + userState.user.userName}\n              className=\"float-right unhoverable-menu-item\"\n            >\n              <Menu.Item key=\"userProfile\" icon={<SettingOutlined />}>\n                <a href=\"/user/profile\">User Profile</a>\n              </Menu.Item>\n              <Menu.Item key=\"userPosts\" icon={<GroupOutlined />}>\n                <a href=\"/user/posts\">User Posts</a>\n              </Menu.Item>\n              <Menu.Item\n                key=\"logout\"\n                icon={<LoginOutlined />}\n                onClick={() => dispatch(userAuthActions.logout())}\n              >\n                Logout\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item\n              key=\"newPost\"\n              icon={<FormOutlined />}\n              className=\"float-right\"\n            >\n              <a href=\"/posts/new\">New Post</a>\n            </Menu.Item>\n          </>\n        ) : (\n          <>\n            <Menu.Item\n              key=\"login\"\n              icon={<LoginOutlined />}\n              className=\"float-right\"\n            >\n              <a href=\"/login\">Login</a>\n            </Menu.Item>\n            <Menu.Item\n              key=\"logout\"\n              icon={<UserAddOutlined />}\n              className=\"float-right\"\n            >\n              <a href=\"/signup\">Signup</a>\n            </Menu.Item>\n          </>\n        )}\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nexport default function FooterComponent() {\n  return (\n    <div className=\"footer-component\">© MERN Blog 2021 by Maryam Aljanabi</div>\n  );\n}\n","import React from \"react\";\nimport HorizontalNavbar from \"./../Navbars/HorizontalNavbar\";\nimport { Layout as AntdLayout } from \"antd\";\nimport FooterComponent from \"./../Footer/FooterComponent\";\n\nconst { Header, Footer, Sider, Content } = AntdLayout;\n\nexport default function Layout({ children }) {\n  return (\n    <AntdLayout>\n      <Header>\n        <HorizontalNavbar />\n      </Header>\n      <div className=\"page-container\">\n        <div className=\"page-content\">{children}</div>\n        <div className=\"footer\">\n          <FooterComponent />\n        </div>\n      </div>\n    </AntdLayout>\n  );\n}\n","import React from \"react\";\nimport \"./Jumbotron.scss\";\n\nexport default function Jumbotron({ children }) {\n  return <div className=\"jumbotron\">{children}</div>;\n}\n","import Axios from \"axios\";\nconst axiosConfig = {\n  baseURL: `http://${window.location.hostname}:5000/api`,\n};\n\nconst axios = Axios.create(axiosConfig);\n\n// AUTH\nexport const authAPI = {\n  login: (data) => axios.post(`/auth/login`, data),\n  signup: (data) => axios.post(`/auth/signup`, data),\n};\n\n// USERS\nexport const usersAPI = {\n  getAll: () => axios.get(`/users`),\n  getOne: (id) => axios.get(`/users/${id}`),\n  add: (data) => axios.post(`/users`, data),\n  update: (data) => axios.put(`/users`, data),\n  delete: (id) => axios.delete(`/users/${id}`),\n};\n\n// POSTS\nexport const postsAPI = {\n  getAll: () => axios.get(`/posts`),\n  getPostByUserId: (id) => axios.get(`/posts/user/${id}`),\n  getOne: (id) => axios.get(`/posts/${id}`),\n  add: (data) => axios.post(`/posts`, data),\n  update: (data) => axios.put(`/posts`, data),\n  delete: (id) => axios.delete(`/posts/${id}`),\n};\n\n// COMMENTS\nexport const commentsAPI = {\n  add: (data) => axios.post(`/comments`, data),\n  update: (data) => axios.put(`/comments`, data),\n  delete: (id) => axios.delete(`/comments/${id}`),\n};\n","export default __webpack_public_path__ + \"static/media/default-post-image.dd982f18.jpg\";","import React, { useState } from \"react\";\nimport { Row, Col, Card, Modal, message } from \"antd\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport \"./PostsGrid.scss\";\nimport { postsAPI } from \"./../../api/api\";\nimport { useSelector } from \"react-redux\";\n\nconst { Meta } = Card;\n\nexport default function PostsGrid({ data, reloadPosts }) {\n  const router = useHistory();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [reload, setReload] = useState(false);\n  const userState = useSelector((st) => st.user);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setReload(!reload);\n      reloadPosts(!reload);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n    } catch (error) {\n      console.log(\"Error deleting post...\", error.response ?? error);\n      message.error(\"Error deleting post\");\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n      setDeleteModal(false);\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"posts-container\" type=\"flex\">\n        {data.map((item) => (\n          <Col xs={24} sm={12} md={8} lg={8} key={item._id}>\n            <Card\n              hoverable\n              cover={\n                <div\n                  className=\"image-container\"\n                  onClick={() =>\n                    router.push(\"/posts/view\", { postID: item._id })\n                  }\n                >\n                  <img\n                    alt={item.title}\n                    src={item.imagePath ? item.imagePath : defaultPostImage}\n                    className=\"card-image\"\n                  />\n                </div>\n              }\n              actions={\n                item.createdBy === userState.user.id\n                  ? [\n                      <EditTwoTone\n                        key=\"edit\"\n                        onClick={() =>\n                          router.push(\"/posts/edit\", { postID: item._id })\n                        }\n                      />,\n                      <DeleteTwoTone\n                        key=\"delete\"\n                        twoToneColor=\"red\"\n                        onClick={() => {\n                          setDeletePostID(item._id);\n                          setDeleteModal(true);\n                        }}\n                      />,\n                    ]\n                  : []\n              }\n            >\n              <Meta\n                title={item.title}\n                description={item.content.substring(0, 100) + \"...\"}\n                onClick={() => router.push(\"/posts/view\", { postID: item._id })}\n              />\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Modal\n        title=\"Delete Confirmation\"\n        visible={deleteModal}\n        onOk={() => confirmDelete()}\n        onCancel={() => setDeleteModal(false)}\n        centered\n      >\n        <p>Are you sure you want to delete post?</p>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\nimport \"./Home.scss\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport { Button, Row, Col, Divider, Card, Spin, Alert } from \"antd\";\nimport { RightCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { postsAPI } from \"../../api/api\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport { useSelector } from \"react-redux\";\nimport PostsGrid from \"../../components/PostsGrid/PostsGrid\";\nconst { Meta } = Card;\n\nexport default function Home() {\n  const router = useHistory();\n  const userState = useSelector((st) => st.user);\n  const [postsData, setPostsData] = useState([]);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [width]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data: res } = await postsAPI.getAll();\n        setPostsData(res);\n        setErrorMsg(null);\n      } catch (error) {\n        setErrorMsg(\"Error loading posts data\");\n        console.log(\"Error retrieving all posts...\", error);\n      }\n    })();\n  }, [reload]);\n\n  return (\n    <div className=\"home\">\n      {userState.isLoggedIn ? (\n        <>\n          <Jumbotron>\n            <div className=\"home-jumbotron\">\n              {width <= 650 ? (\n                <div className=\"centered-section\">\n                  <h3>A blogging website for</h3>\n                  <h2>EVERYONE</h2>\n                  <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<RightCircleOutlined />}\n                    size=\"large\"\n                    onClick={() => router.push(\"/posts/new\")}\n                  >\n                    Write a post now!\n                  </Button>\n                </div>\n              ) : (\n                <>\n                  <div className=\"left-section\">\n                    <h3>A blogging website for</h3>\n                    <h2>EVERYONE</h2>\n                    <Button\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<RightCircleOutlined />}\n                      size=\"large\"\n                      onClick={() => router.push(\"/posts/new\")}\n                    >\n                      Get Started\n                    </Button>\n                  </div>\n                  <div className=\"right-section\">\n                    <Player\n                      autoplay\n                      loop\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          </Jumbotron>\n        </>\n      ) : (\n        <>\n          <Jumbotron>\n            <div className=\"home-jumbotron\">\n              {width <= 650 ? (\n                <div className=\"centered-section\">\n                  <h3>A blogging website for</h3>\n                  <h2>EVERYONE</h2>\n                  <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<RightCircleOutlined />}\n                    size=\"large\"\n                    onClick={() => router.push(\"/login\")}\n                  >\n                    Get Started\n                  </Button>\n                </div>\n              ) : (\n                <>\n                  <div className=\"left-section\">\n                    <h3>A blogging website for</h3>\n                    <h2>EVERYONE</h2>\n                    <Button\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<RightCircleOutlined />}\n                      size=\"large\"\n                      onClick={() => router.push(\"/login\")}\n                    >\n                      Get Started\n                    </Button>\n                  </div>\n                  <div className=\"right-section\">\n                    <Player\n                      autoplay\n                      loop\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          </Jumbotron>\n        </>\n      )}\n      <Divider orientation=\"center\">Most recent posts</Divider>\n      {errorMsg ? (\n        <div className=\"loader-container\">\n          <Alert message={errorMsg} type=\"error\" />\n        </div>\n      ) : postsData && Boolean(postsData.length) ? (\n        <PostsGrid data={postsData} reloadPosts={(param) => setReload(param)} />\n      ) : (\n        <div className=\"loader-container\">\n          <Spin size=\"large\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\n\nexport default function LoginForm() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const dispatch = useDispatch();\n  const userState = useSelector((st) => st.user);\n\n  const onSubmit = async (event) => {\n    try {\n      dispatch(userAuthActions.login({ user: event }));\n    } catch (error) {\n      console.log(\"Error logging in user...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Login error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    if (!values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    return errors;\n  };\n\n  useEffect(() => {\n    if (userState.error) {\n      setSubmissionErrors([userState.error]);\n    }\n    if (userState.isLoggedIn) {\n      message.success(\"User logged in successfully\");\n      router.push(\"/\");\n    }\n  }, [userState]);\n\n  return (\n    <FinalForm\n      initialValues={initialValues}\n      validate={checkValidation}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting }) => (\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <Form.Item\n            label=\"Email\"\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}\n          >\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"email\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"password\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n\n          {!isEmpty(submissionErrors) && (\n            <div>\n              {typeof submissionErrors === \"object\" ? (\n                Object.entries(submissionErrors).map(([key, value]) => (\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\n                    {value}\n                  </Tag>\n                ))\n              ) : (\n                <Tag color=\"error\" className=\"full-width\">\n                  {submissionErrors}\n                </Tag>\n              )}\n            </div>\n          )}\n\n          <div className=\"buttons-wrapper-vertical\">\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n              Login\n            </Button>\n            <Button\n              htmlType=\"button\"\n              type=\"link\"\n              onClick={() => router.push(\"signup\")}\n            >\n              Don't have an account? Signup!\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport \"./Login.scss\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function Login() {\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [width]);\n\n  return (\n    <div className=\"login\">\n      {width <= 650 ? (\n        <div className=\"center-panel\">\n          <LoginForm />\n        </div>\n      ) : (\n        <>\n          <div className=\"left-panel\">\n            <LoginForm />\n          </div>\n          <div className=\"right-panel\">\n            <h2>\n              #1 Bloggin website for everyone around the globe. Totally free and\n              easy to use.\n            </h2>\n            <Player\n              autoplay\n              loop\n              src=\"https://assets2.lottiefiles.com/packages/lf20_jcikwtux.json\"\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { authAPI } from \"./../../api/api\";\nimport isEmpty from \"lodash.isempty\";\n\nexport default function SignupForm() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n\n  const onSubmit = async (event) => {\n    try {\n      await authAPI.signup({ user: event });\n      message.success(\"User created successfully\");\n      router.push(\"/login\");\n    } catch (error) {\n      console.log(\"Error registering a new user...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Signup error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.userName?.trim()) {\n      errors.userName = \"Please enter the userName\";\n    }\n    if (!values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    if (!values.confirmPassword?.trim()) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (!values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    return errors;\n  };\n\n  return (\n    <FinalForm\n      initialValues={initialValues}\n      validate={checkValidation}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting }) => (\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <Form.Item\n            label=\"UserName\"\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}\n          >\n            <Field name=\"userName\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"userName\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"password\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Confirm Password\" labelCol={{ span: 24 }}>\n            <Field name=\"confirmPassword\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"confirmPassword\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"email\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\n            <Field name=\"summary\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"summary\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n            <Field name=\"imagePath\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"imagePath\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n\n          {!isEmpty(submissionErrors) && (\n            <div>\n              {Object.entries(submissionErrors).map(([key, value]) => (\n                <Tag color=\"error\" className=\"full-width\" key={key}>\n                  {value}\n                </Tag>\n              ))}\n            </div>\n          )}\n\n          <div className=\"buttons-wrapper-vertical\">\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n              Signup\n            </Button>\n            <Button\n              htmlType=\"button\"\n              type=\"link\"\n              onClick={() => router.push(\"login\")}\n            >\n              Already have an account? Login!\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport SignupForm from \"./SignupForm\";\n\nexport default function Signup() {\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [width]);\n\n  return (\n    <div className=\"signup\">\n      {width <= 650 ? (\n        <div className=\"center-panel\">\n          <h2 className=\"centered-text\">Sign up for free</h2>\n          <SignupForm />\n        </div>\n      ) : (\n        <>\n          <div className=\"center-panel-small\">\n            <h2 className=\"centered-text\">Sign up for free</h2>\n            <SignupForm />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useSelector } from \"react-redux\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { postsAPI } from \"./../../api/api\";\n\nexport default function NewPost() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector((st) => st.user);\n\n  const onSubmit = async (event) => {\n    try {\n      await postsAPI.add({\n        post: { ...event, createdBy: userState.user.id },\n      });\n      message.success(\"Post created successfully\");\n      router.push(\"/\");\n    } catch (error) {\n      console.log(\"Error creating a new post...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Post error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.title?.trim()) {\n      errors.title = \"Please enter the post's title\";\n    }\n    if (!values.content?.trim()) {\n      errors.content = \"Please enter the post's content\";\n    }\n    return errors;\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h3>Create a new post</h3>\n      <FinalForm\n        initialValues={initialValues}\n        validate={checkValidation}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitting }) => (\n          <form className=\"form\" onSubmit={handleSubmit}>\n            <Form.Item\n              label=\"Title\"\n              labelCol={{ span: 24 }}\n              wrapperCol={{ span: 24 }}\n            >\n              <Field name=\"title\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"title\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\n              <Field name=\"content\">\n                {({ input, meta }) => (\n                  <div>\n                    <TextArea rows={4} {...input} name=\"content\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n              <Field name=\"imagePath\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"imagePath\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            {!isEmpty(submissionErrors) && (\n              <div>\n                {Object.entries(submissionErrors).map(([key, value]) => (\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\n                    {value}\n                  </Tag>\n                ))}\n              </div>\n            )}\n\n            <div className=\"buttons-wrapper-horizontal\">\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n                Create Post\n              </Button>\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\n                Back\n              </Button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { postsAPI } from \"./../../api/api\";\nimport { useLocation } from \"react-router-dom\";\nimport PostsGrid from \"../../components/PostsGrid/PostsGrid\";\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\n\nexport default function UserPosts() {\n  const userState = useSelector((st) => st.user);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [postsData, setPostsData] = useState([]);\n  const location = useLocation();\n  const [userName, setUserName] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [reload, setReload] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [width]);\n\n  const getPostsData = async () => {\n    try {\n      const { data: res } = await postsAPI.getPostByUserId(\n        userID ?? userState.user.id\n      );\n      setPostsData(res);\n      setErrorMsg(null);\n    } catch (error) {\n      setPostsData([]);\n      setErrorMsg(\"Error loading user posts\");\n      console.log(\"Error retrieving all posts...\", error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (\n        location.state &&\n        location.state.hasOwnProperty(\"userID\") &&\n        location.state.hasOwnProperty(\"userName\")\n      ) {\n        setUserName(location.state.userName);\n        setUserID(location.state.userID);\n      }\n\n      getPostsData();\n    })();\n  }, [location.state]);\n\n  useEffect(() => {\n    getPostsData();\n  }, [reload]);\n\n  return (\n    <div className=\"posts-div\">\n      {errorMsg ? (\n        <div className=\"loader-container\">\n          <Alert message={errorMsg} type=\"error\" />\n        </div>\n      ) : Object.keys(postsData).length === 0 ? (\n        <div className=\"loader-container\">\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <>\n          <h2>{userName ? `Posts of user ${userName}` : \"Your posts\"}</h2>\n          {Boolean(postsData) && Boolean(postsData.length) ? (\n            <PostsGrid\n              data={postsData}\n              reloadPosts={(reloadTrigger) => setReload(reloadTrigger)}\n            />\n          ) : (\n            <h2>You have no posts yet</h2>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useSelector } from \"react-redux\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { postsAPI } from \"./../../api/api\";\n\nexport default function EditPost() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector((st) => st.user);\n  const location = useLocation();\n  const [postID, setPostID] = useState(null);\n\n  useEffect(() => {\n    let id = null;\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n        setPostID(id);\n        try {\n          const { data: res } = await postsAPI.getOne(id);\n          console.log(res);\n          setInitialValues(res);\n        } catch (error) {\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"Post ID was not provided\");\n        router.goBack();\n      }\n    })();\n  }, [location.state]);\n\n  const onSubmit = async (event) => {\n    try {\n      await postsAPI.update({\n        post: event,\n      });\n      message.success(\"Post updated successfully\");\n      router.goBack();\n    } catch (error) {\n      console.log(\"Error updating post...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Update error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.title?.trim()) {\n      errors.title = \"Please enter the post's title\";\n    }\n    if (!values.content?.trim()) {\n      errors.content = \"Please enter the post's content\";\n    }\n    return errors;\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h3>Edit post</h3>\n      <FinalForm\n        initialValues={initialValues}\n        validate={checkValidation}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitting }) => (\n          <form className=\"form\" onSubmit={handleSubmit}>\n            <Form.Item\n              label=\"Title\"\n              labelCol={{ span: 24 }}\n              wrapperCol={{ span: 24 }}\n            >\n              <Field name=\"title\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"title\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\n              <Field name=\"content\">\n                {({ input, meta }) => (\n                  <div>\n                    <TextArea rows={4} {...input} name=\"content\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n              <Field name=\"imagePath\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"imagePath\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            {!isEmpty(submissionErrors) && (\n              <div>\n                {Object.entries(submissionErrors).map(([key, value]) => (\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\n                    {value}\n                  </Tag>\n                ))}\n              </div>\n            )}\n\n            <div className=\"buttons-wrapper-horizontal\">\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n                Update Post\n              </Button>\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\n                Back\n              </Button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default-user.c3f94521.png\";","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\nimport {\n  EditFilled,\n  LockFilled,\n  SaveFilled,\n  CaretLeftOutlined,\n} from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersAPI } from \"./../../api/api\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport \"./UserProfile.scss\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\n\nexport default function UserProfile() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector((st) => st.user);\n  const [editing, setEditing] = useState(false);\n  const [editingPassword, setEditingPassword] = useState(false);\n  const dispatch = useDispatch();\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      if (userState && userState.user && userState.user.id) {\n        try {\n          const { data: res } = await usersAPI.getOne(userState.user.id);\n          setInitialValues(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setInitialValues({});\n          setErrorMsg(\"Error loading user profile\");\n          console.log(\"Error retrieving user data...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving user ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, []);\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (editing && !values.userName?.trim()) {\n      errors.userName = \"Please enter the userName\";\n    }\n    if (editingPassword && !values.oldPassword?.trim()) {\n      errors.password = \"Please enter the old password\";\n    }\n    if (editingPassword && !values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    if (editingPassword && !values.confirmPassword?.trim()) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (editingPassword && values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (editing && !values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    return errors;\n  };\n\n  const onSubmit = async (event) => {\n    setSubmissionErrors([]);\n    try {\n      await usersAPI.update({ user: event });\n      dispatch(userAuthActions.updateUser(event));\n      message.success(\"User profile updated successfully\");\n      setEditing(false);\n      setEditingPassword(false);\n      setInitialValues(event);\n    } catch (error) {\n      console.log(\"Error updating user profile..\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Profile update error\" });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"user-profile\">\n        {errorMsg ? (\n          <div className=\"loader-container\">\n            <Alert message={errorMsg} type=\"error\" />\n          </div>\n        ) : Object.keys(initialValues).length === 0 ? (\n          <div className=\"loader-container\">\n            <Spin size=\"large\" />\n          </div>\n        ) : (\n          <>\n            <h2 className=\"centered-text \">\n              {initialValues.userName}'s Profile\n            </h2>\n            <div className=\"user-image centered-text \">\n              <Image\n                className=\"image\"\n                src={initialValues.imagePath ?? defaultUser}\n              />\n            </div>\n            <div className=\"user-info\">\n              <FinalForm\n                initialValues={initialValues}\n                validate={checkValidation}\n                onSubmit={onSubmit}\n                render={({ handleSubmit, submitting, form }) => (\n                  <form className=\"form\" onSubmit={handleSubmit}>\n                    <Form.Item\n                      label=\"UserName\"\n                      labelCol={{ span: 24 }}\n                      wrapperCol={{ span: 24 }}\n                    >\n                      <Field name=\"userName\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              name=\"userName\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n\n                    <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\n                      <Field name=\"email\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              name=\"email\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n                    <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\n                      <Field name=\"summary\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              value={\n                                !initialValues.summary && !editing\n                                  ? \"No content\"\n                                  : initialValues.summary\n                              }\n                              name=\"summary\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n                    {editing && (\n                      <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n                        <Field name=\"imagePath\">\n                          {({ input, meta }) => (\n                            <div>\n                              <Input {...input} name=\"imagePath\" />\n                              {meta.touched && meta.error && (\n                                <Tag color=\"error\">{meta.error}</Tag>\n                              )}\n                            </div>\n                          )}\n                        </Field>\n                      </Form.Item>\n                    )}\n\n                    {editingPassword && (\n                      <>\n                        <Form.Item label=\"Old Password\" labelCol={{ span: 24 }}>\n                          <Field name=\"oldPassword\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password\n                                  {...input}\n                                  name=\"oldPassword\"\n                                  className=\"no-radius\"\n                                />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                        <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n                          <Field name=\"password\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password {...input} name=\"password\" />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Confirm Password\"\n                          labelCol={{ span: 24 }}\n                        >\n                          <Field name=\"confirmPassword\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password\n                                  {...input}\n                                  name=\"confirmPassword\"\n                                />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                      </>\n                    )}\n\n                    {!isEmpty(submissionErrors) && (\n                      <div>\n                        {Object.entries(submissionErrors).map(\n                          ([key, value]) => (\n                            <Tag color=\"error\" className=\"full-width\" key={key}>\n                              {value}\n                            </Tag>\n                          )\n                        )}\n                      </div>\n                    )}\n\n                    <div className=\"buttons-wrapper-horizontal m-auto\">\n                      {!(editing || editingPassword) && (\n                        <>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<EditFilled />}\n                            onClick={() => {\n                              setEditing(true);\n                              setEditingPassword(false);\n                            }}\n                          >\n                            Edit Profile\n                          </Button>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<LockFilled />}\n                            onClick={() => {\n                              setEditing(false);\n                              setEditingPassword(true);\n                            }}\n                          >\n                            Edit Password\n                          </Button>\n                        </>\n                      )}\n\n                      {(editing || editingPassword) && (\n                        <>\n                          <Button\n                            disabled={submitting}\n                            htmlType=\"submit\"\n                            type=\"primary\"\n                            icon={<SaveFilled />}\n                          >\n                            Submit\n                          </Button>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<CaretLeftOutlined />}\n                            onClick={() => {\n                              setEditing(false);\n                              setEditingPassword(false);\n                              form.reset();\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                        </>\n                      )}\n                    </div>\n                  </form>\n                )}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message, Alert } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { commentsAPI } from \"./../../api/api\";\n\nexport default function CommentForm({ createdBy, postId, setReloadingFlag }) {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  const [reloading, setReloading] = useState(false);\n\n  const onSubmit = async (event) => {\n    if (isEmpty(event) || !event.content) {\n      setSubmissionErrors(\"Can't submit an empty comment\");\n    } else {\n      setSubmissionErrors(null);\n    }\n\n    try {\n      await commentsAPI.add({\n        comment: { ...event, createdBy: createdBy, postId: postId },\n      });\n      message.success(\"Comment added successfully\");\n      setReloading(!reloading);\n      setReloadingFlag(reloading);\n    } catch (error) {\n      console.log(\"Error adding comment...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors(\"Error adding comment\");\n    }\n  };\n\n  return (\n    <div className=\"comment-form\">\n      <FinalForm\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        render={({ form, handleSubmit, submitting, reset }) => (\n          <form\n            onSubmit={async (event) => {\n              await handleSubmit(event);\n              form.reset();\n            }}\n          >\n            <Form.Item labelCol={{ span: 24 }}>\n              <Field name=\"content\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input\n                      {...input}\n                      name=\"content\"\n                      placeholder=\"Add a comment\"\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            {submissionErrors && (\n              <Alert\n                message={submissionErrors}\n                type=\"error\"\n                showIcon\n                closable\n              />\n            )}\n\n            <div className=\"comments-btns-container\">\n              <Button\n                disabled={submitting}\n                htmlType=\"button\"\n                onClick={form.reset}\n              >\n                Clear\n              </Button>\n\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n                Comment\n              </Button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport \"./Comments.scss\";\nimport moment from \"moment\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Input, Button, Alert } from \"antd\";\n\nexport default function CommentsDesktop({\n  comment,\n  index,\n  userState,\n  setDeleteModal,\n  selectedEditCommentID,\n  setDeleteSelectedCommentID,\n  setEditSelectedCommentID,\n  onSubmit,\n}) {\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  return (\n    <div className=\"comment-container full-width-comment\" key={index}>\n      <div>\n        <Avatar size=\"large\" src={comment.createdBy.imagePath ?? defaultUser} />\n      </div>\n      <div\n        className={\n          comment._id === selectedEditCommentID ? \"full-width-comment\" : \"cols\"\n        }\n      >\n        <div className=\"comment-text\">\n          <b>{comment.createdBy.userName}</b>\n          <div>\n            {comment._id === selectedEditCommentID ? (\n              <FinalForm\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                render={({ form, handleSubmit, submitting, reset }) => (\n                  <form\n                    className=\"comment-editing\"\n                    onSubmit={async (event) => {\n                      await handleSubmit(event);\n                      form.reset();\n                    }}\n                  >\n                    <Form.Item labelCol={{ span: 24 }}>\n                      <Field name=\"content\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input {...input} name=\"content\" />\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n\n                    {submissionErrors && (\n                      <Alert\n                        message={submissionErrors}\n                        type=\"error\"\n                        showIcon\n                        closable\n                      />\n                    )}\n\n                    <div className=\"comments-btns-container\">\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                      >\n                        Update Comment\n                      </Button>\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"button\"\n                        onClick={() => setEditSelectedCommentID(null)}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              />\n            ) : (\n              comment.content\n            )}\n          </div>\n        </div>\n        <div className=\"comment-date\">\n          {comment._id !== selectedEditCommentID && (\n            <>\n              {moment(comment.createdAt).fromNow(false)}\n              {comment.createdBy._id === userState.user.id && (\n                <div className=\"icons-cols\">\n                  <EditTwoTone\n                    key=\"edit\"\n                    onClick={() => {\n                      setEditSelectedCommentID(comment._id);\n                      setInitialValues({ ...comment });\n                    }}\n                  />\n                  <DeleteTwoTone\n                    key=\"delete\"\n                    twoToneColor=\"red\"\n                    onClick={() => {\n                      setDeleteSelectedCommentID(comment._id);\n                      setDeleteModal(true);\n                    }}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport \"./Comments.scss\";\nimport moment from \"moment\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Input, Button, Alert } from \"antd\";\n\nexport default function CommentsMobile({\n  comment,\n  index,\n  userState,\n  setDeleteModal,\n  selectedEditCommentID,\n  setDeleteSelectedCommentID,\n  setEditSelectedCommentID,\n  onSubmit,\n}) {\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  return (\n    <div className=\"comment-container full-width-comment\" key={index}>\n      <div>\n        <Avatar size=\"large\" src={comment.createdBy.imagePath ?? defaultUser} />\n      </div>\n      <div className=\"full-width-comment\">\n        <div className=\"comment-text-mobile\">\n          <b>{comment.createdBy.userName}</b>\n          <div className=\"comment-date-mobile\">\n            {moment(comment.createdAt).fromNow(false)}\n          </div>\n          <div>\n            {comment._id === selectedEditCommentID ? (\n              <FinalForm\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                render={({ form, handleSubmit, submitting, reset }) => (\n                  <form\n                    className=\"comment-editing\"\n                    onSubmit={async (event) => {\n                      await handleSubmit(event);\n                      form.reset();\n                    }}\n                  >\n                    <Form.Item labelCol={{ span: 24 }}>\n                      <Field name=\"content\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input {...input} name=\"content\" />\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n\n                    {submissionErrors && (\n                      <Alert\n                        message={submissionErrors}\n                        type=\"error\"\n                        showIcon\n                        closable\n                      />\n                    )}\n\n                    <div className=\"comments-btns-container\">\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                      >\n                        Update Comment\n                      </Button>\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"button\"\n                        onClick={() => setEditSelectedCommentID(null)}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              />\n            ) : (\n              comment.content\n            )}\n          </div>\n        </div>\n\n        {comment._id !== selectedEditCommentID && (\n          <>\n            {comment.createdBy._id === userState.user.id && (\n              <div className=\"icons-cols-mobile\">\n                <EditTwoTone\n                  key=\"edit\"\n                  onClick={() => {\n                    setEditSelectedCommentID(comment._id);\n                    setInitialValues({ ...comment });\n                  }}\n                />\n                <DeleteTwoTone\n                  key=\"delete\"\n                  twoToneColor=\"red\"\n                  onClick={() => {\n                    setDeleteSelectedCommentID(comment._id);\n                    setDeleteModal(true);\n                  }}\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport \"./Comments.scss\";\nimport moment from \"moment\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Input, Button, message, Alert, Modal } from \"antd\";\nimport { commentsAPI } from \"../../api/api\";\nimport isEmpty from \"lodash.isempty\";\nimport CommentsDesktop from \"./CommentsDesktop\";\nimport CommentsMobile from \"./CommentsMobile\";\n\nexport default function Comments({\n  data,\n  setDeleteReloadingFlag,\n  setEditReloadingFlag,\n}) {\n  const userState = useSelector((st) => st.user);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [selectedDeleteCommentID, setDeleteSelectedCommentID] = useState(null);\n  const [selectedEditCommentID, setEditSelectedCommentID] = useState(null);\n  const [deleteReloading, setDeleteReloading] = useState(false);\n  const [editReloading, setEditReloading] = useState(false);\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [width]);\n\n  const confirmDelete = async () => {\n    try {\n      await commentsAPI.delete(selectedDeleteCommentID);\n      setDeleteModal(false);\n      message.success(\"Comment deleted successfully\");\n      setDeleteReloadingFlag(!deleteReloading);\n      setDeleteReloading(!deleteReloading);\n    } catch (error) {\n      console.log(\"Error deleting comment...\", error.response ?? error);\n      message.error(\"Error deleting comment\");\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting comment\");\n      setDeleteModal(false);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    if (isEmpty(event) || !event.content) {\n      setSubmissionErrors(\"Can't submit an empty comment\");\n    } else {\n      setSubmissionErrors(null);\n    }\n\n    try {\n      await commentsAPI.update({\n        comment: { ...event },\n      });\n      message.success(\"Comment updated successfully\");\n      setEditReloadingFlag(!editReloading);\n      setEditReloading(!editReloading);\n      setEditSelectedCommentID(null);\n    } catch (error) {\n      console.log(\"Error editing comment...\", error.response ?? error);\n      message.error(\"Error editing comment\");\n    }\n  };\n\n  return (\n    <div>\n      {data && Boolean(data.length)\n        ? data.length === 1\n          ? `${data.length} Comment`\n          : `${data.length} Comments`\n        : null}\n\n      {data.map((comment, index) =>\n        width >= 580 ? (\n          <CommentsDesktop\n            comment={comment}\n            index={index}\n            userState={userState}\n            setEditSelectedCommentID={setEditSelectedCommentID}\n            selectedEditCommentID={selectedEditCommentID}\n            setDeleteSelectedCommentID={setDeleteSelectedCommentID}\n            selectedDeleteCommentID={selectedDeleteCommentID}\n            setDeleteModal={setDeleteModal}\n            onSubmit={onSubmit}\n          />\n        ) : (\n          <CommentsMobile\n            comment={comment}\n            index={index}\n            userState={userState}\n            setEditSelectedCommentID={setEditSelectedCommentID}\n            selectedEditCommentID={selectedEditCommentID}\n            setDeleteSelectedCommentID={setDeleteSelectedCommentID}\n            selectedDeleteCommentID={selectedDeleteCommentID}\n            setDeleteModal={setDeleteModal}\n            onSubmit={onSubmit}\n          />\n        )\n      )}\n\n      <Modal\n        title=\"Delete Confirmation\"\n        visible={deleteModal}\n        onOk={() => confirmDelete()}\n        onCancel={() => setDeleteModal(false)}\n        centered\n      >\n        <p>Are you sure you want to delete this comment?</p>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Button, message, Image, Spin, Alert, Modal, Divider } from \"antd\";\nimport { EditFilled, DeleteFilled } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport { postsAPI } from \"./../../api/api\";\nimport \"./Post.scss\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport moment from \"moment\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport CommentForm from \"../Comments/CommentForm\";\nimport Comments from \"../Comments/Comments\";\n\nexport default function Post() {\n  const [postData, setPostData] = useState({});\n  const router = useHistory();\n  const userState = useSelector((st) => st.user);\n  const location = useLocation();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [reloadDelete, setReloadDelete] = useState(null);\n  const [reloadEdit, setReloadEdit] = useState(null);\n  const [reloadPost, setReloadPost] = useState(null);\n\n  useEffect(() => {\n    let id = null;\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n        try {\n          const { data: res } = await postsAPI.getOne(id);\n          setPostData(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setPostData({});\n          setErrorMsg(\"Error loading post data\");\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving post ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, [location.state, reloadDelete, reloadPost, reloadEdit]);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n      router.goBack();\n    } catch (error) {\n      console.log(\"Error deleting post...\", error.response ?? error);\n      message.error(\"Error deleting post\");\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n      setDeleteModal(false);\n    }\n  };\n\n  return (\n    <div className=\"view-post\">\n      {errorMsg ? (\n        <div className=\"loader-container\">\n          <Alert message={errorMsg} type=\"error\" />\n        </div>\n      ) : Object.keys(postData).length === 0 ? (\n        <div className=\"loader-container\">\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <>\n          <div className=\"post-header\">\n            <h1>{postData.title}</h1>\n            <div className=\"two-cols\">\n              <div>\n                <Avatar\n                  size=\"large\"\n                  src={postData.userImageUrl ?? defaultUser}\n                />\n                &nbsp;\n                {postData.createdByName}\n              </div>\n              <p>{moment(postData.createdAt).format(\"DD MMMM YYYY\")}</p>\n            </div>\n          </div>\n          <div className=\"centered-text\">\n            <Image\n              src={postData.imagePath ? postData.imagePath : defaultPostImage}\n            />\n          </div>\n          <div className=\"post-content\">{postData.content}</div>\n          {postData.createdBy === userState.user.id && (\n            <div className=\"buttons-wrapper-horizontal\">\n              <Button\n                htmlType=\"button\"\n                type=\"primary\"\n                icon={<EditFilled />}\n                onClick={() =>\n                  router.push(\"/posts/edit\", { postID: postData._id })\n                }\n              >\n                Edit\n              </Button>\n\n              <Button\n                htmlType=\"button\"\n                type=\"primary\"\n                icon={<DeleteFilled />}\n                danger\n                onClick={() => {\n                  setDeletePostID(postData._id);\n                  setDeleteModal(true);\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n          {Boolean(userState.user.id) && (\n            <>\n              <Divider />\n              <CommentForm\n                createdBy={userState.user.id}\n                postId={postData._id}\n                setReloadingFlag={(value) => setReloadPost(value)}\n              />\n            </>\n          )}\n          <Comments\n            data={postData.comments}\n            setDeleteReloadingFlag={(value) => setReloadDelete(value)}\n            setEditReloadingFlag={(value) => setReloadEdit(value)}\n          />\n\n          <Modal\n            title=\"Delete Confirmation\"\n            visible={deleteModal}\n            onOk={() => confirmDelete()}\n            onCancel={() => setDeleteModal(false)}\n            centered\n          >\n            <p>Are you sure you want to delete post?</p>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst LoggedInRoute = ({ component: Component, ...rest }) => {\n  const userState = useSelector((st) => st.user);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        userState.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default LoggedInRoute;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst NotLoggedInRoute = ({ component: Component, ...rest }) => {\n  const userState = useSelector((st) => st.user);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !userState.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default NotLoggedInRoute;\n","import React from \"react\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"my-2-auto\">\n      <h1 className=\"centered-text\">Page not found</h1>\n      <Player\n        autoplay\n        loop\n        style={{ height: \"500px\" }}\n        src=\"https://assets1.lottiefiles.com/packages/lf20_zxliqmhr.json\"\n      />\n    </div>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout/Layout\";\nimport Home from \"./pages/Home/Home\";\nimport Login from \"./pages/Login/Login\";\nimport Signup from \"./pages/Signup/Signup\";\nimport NewPost from \"./pages/Posts/NewPost\";\nimport UserPosts from \"./pages/Posts/UserPosts\";\nimport EditPost from \"./pages/Posts/EditPost\";\nimport UserProfile from \"./pages/Users/UserProfile\";\nimport Post from \"./pages/Posts/Post\";\nimport LoggedInRoute from \"./LoggedInRoute\";\nimport NotLoggedInRoute from \"./NotLoggedInRoute\";\nimport NotFound from \"./pages/NotFound/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]} component={Home} />\n        <NotLoggedInRoute exact path=\"/login\" component={Login} />\n        <NotLoggedInRoute exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/user/posts\" component={UserPosts} />\n        <Route exact path=\"/user/profile\" component={UserProfile} />\n        <Route exact path=\"/posts/view\" component={Post} />\n        <LoggedInRoute exact path=\"/posts/new\" component={NewPost} />\n        <LoggedInRoute exact path=\"/posts/edit\" component={EditPost} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { userAuth as actions } from \"./../actions/index\";\nimport jwt from \"jsonwebtoken\";\nimport { saveState, loadState } from \"./../store/sessionStorage\";\n\nlet initialState;\nconst emptyState = {\n  isLoggedIn: false,\n  error: \"\",\n  token: null,\n  user: {\n    id: \"\",\n    userName: \"\",\n    imagePath: \"\",\n  },\n};\nif (loadState() && loadState().token) {\n  const decodedToken = jwt.decode(loadState().token);\n  initialState = {\n    ...loadState(),\n    user: {\n      id: decodedToken.id,\n      userName: decodedToken.userName,\n      imagePath: decodedToken.imagePath,\n    },\n  };\n} else {\n  initialState = { ...emptyState };\n}\n\nexport const userAuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.LOGIN_SUCCESS:\n      let newState;\n      if (loadState() && loadState().token) {\n        const decodedToken = jwt.decode(loadState().token);\n        newState = {\n          ...loadState(),\n          user: {\n            id: decodedToken.id,\n            userName: decodedToken.userName,\n            imagePath: decodedToken.imagePath,\n          },\n        };\n      }\n      return newState;\n\n    case actions.UPDATE_USER:\n      let updatedState = {\n        ...state,\n        user: {\n          ...state.user,\n          imagePath: action.payload.imagePath,\n          userName: action.payload.userName,\n        },\n      };\n      saveState(updatedState);\n      return updatedState;\n\n    case actions.LOGOUT:\n      saveState(emptyState);\n      return emptyState;\n\n    case actions.LOGIN_FAILED:\n      if (action.payload) {\n        let newState = {\n          token: null,\n          isLoggedIn: false,\n          error: action.payload,\n        };\n        saveState(newState);\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};\n","export const loadState = () => {\n  try {\n    const serializedState = sessionStorage.getItem(\"user\");\n\n    if (serializedState === null) {\n      return {\n        isLoggedIn: false,\n        errors: \"\",\n        token: null,\n      };\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    console.log(\"Load state error...\", error.response ?? error);\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    sessionStorage.clear();\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(\"user\", serializedState);\n  } catch (error) {\n    console.log(\"Save state error...\", error.response ?? error);\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { userAuthReducer } from \"./userAuthReducer\";\n\nconst rootReducer = combineReducers({\n  user: userAuthReducer,\n});\n\nexport default rootReducer;\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport { userAuth as actions } from \"../actions\";\nimport { userAuthActions } from \"./../actions/actionCreator\";\nimport { authAPI } from \"./../../api/api\";\nimport { saveState } from \"./../store/sessionStorage\";\n\nfunction* createLogin(action) {\n  try {\n    const response = yield authAPI.login(action.payload);\n    if (response.data.token) {\n      const token = response.data.token;\n      saveState({\n        isLoggedIn: true,\n        error: \"\",\n        token: token,\n      });\n      yield put(\n        userAuthActions.loginSuccess({\n          token,\n        })\n      );\n    }\n  } catch (err) {\n    yield put(userAuthActions.loginFailed(\"Login data is incorrect\"));\n  }\n}\n\nexport function* createLoginStart() {\n  yield takeEvery(actions.LOGIN, createLogin);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport { createLoginStart } from \"./userAuthSaga\";\n\nexport default function* rootSaga() {\n  yield all([call(createLoginStart)]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducers/rootReducer\";\nimport rootSaga from \"../sagas/rootSaga\";\n\n// const persistedState = loadState();\n\nconst onSagaUncaughtErrors = (err, errInfo) => {\n  console.log({ onSagaError: \"saga error\", err, errInfo });\n};\n\nconst sagaMiddleware = createSagaMiddleware({ onError: onSagaUncaughtErrors });\nconst loggerMiddleware = createLogger();\n\nconst middleWares = [loggerMiddleware, sagaMiddleware];\n\nlet reduxStore;\n\nconst storeConfig = () => {\n  const store = createStore(rootReducer, applyMiddleware(...middleWares));\n\n  // start redux sagas\n  sagaMiddleware.run(rootSaga);\n  reduxStore = store;\n\n  return store;\n};\n\nexport { reduxStore };\nexport default storeConfig;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/index.scss\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport storeConfig from \"./redux/store/store\";\n\nconst store = storeConfig();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}